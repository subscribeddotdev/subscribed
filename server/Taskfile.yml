version: 3

dotenv:
  - ./.env.local
  - ./.env

tasks:
  setup:
    dir: ./misc/tools/cli
    cmds:
      - docker build -t subscribed-cli-tools:latest .

  tools:
    cmds:
      - |
        docker run \
        --rm \
        --env-file ./.env.local \
        --network host \
        -v $(pwd):/app \
        -w /app \
        subscribed-cli-tools:latest \
        {{.CLI_ARGS}}

  run:
    cmds:
      - docker compose up -d {{.CLI_ARGS}}

  run:backend:
    cmds:
      - task watch -- go run ./cmd/service

  run:webhook-target-emulator:
    cmds:
      - task watch -- go run ./cmd/webhook-target-emulator

  watch:
    cmds:
      - reflex -r '\.go' -s -- sh -c '{{.CLI_ARGS}}'

  mig:up:
    cmds:
      - task tools -- goose -s -dir ./misc/sql/migrations up

  mig:down:
    cmds:
      - task tools -- goose -s -dir ./misc/sql/migrations down

  mig:reset:
    cmds:
      - task tools -- goose -s -dir ./misc/sql/migrations reset

  mig:create:
    cmds:
      - task tools -- goose -s -dir ./misc/sql/migrations create {{.CLI_ARGS}} sql

  seed:up:
    cmds:
      - task tools -- goose -no-versioning -dir ./misc/sql/seeds up

  seed:down:
    cmds:
      - task tools -- goose -no-versioning -dir ./misc/sql/seeds down

  seed:create:
    cmds:
      - task tools -- goose -no-versioning -dir ./misc/sql/seeds create {{.CLI_ARGS}} sql

  orm:
    cmds:
      - task mig:down
      - task mig:up
      - task tools -- sqlboiler psql --wipe --no-tests -o ./internal/adapters/models

  test:all:
    cmds:
      - go clean -testcache
      - task test
      - task test:components

  test:
    cmds:
      - go test -v -race ./internal/...

  test:components:
    cmds:
      - go clean -testcache
      - go test -v -race ./tests/components/...

  lint:
    cmds:
      - task tools -- golangci-lint run

  lint:fix:
    cmds:
      - task tools -- golangci-lint run --fix

  fmt:
    cmds:
      - gofmt -w -s ./

  logs:
    cmds:
      - docker compose logs -f --tail 10

  openapi:
    cmds:
      - |
        task tools -- oapi-codegen \
          -package http \
          -generate server,types,spec \
          ./api/openapi.yml > ./internal/ports/http/server.gen.go

      - |
        task tools -- oapi-codegen \
          -package client \
          -generate client,types,spec \
          ./api/openapi.yml > ./tests/client/client.gen.go

  events:
    cmds:
      - |
        task tools -- protoc ./events/events.proto \
        --go_out=./events/go --go_opt=paths=source_relative \
        --go-grpc_out=./events/go --go-grpc_opt=paths=source_relative \
        --proto_path=./events
